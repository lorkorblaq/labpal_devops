# user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1000;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    access_log /var/log/nginx/clinicalx_main.access.log;
    error_log /var/log/nginx/clinicalx_main.error.log;

    upstream clinicalx_main {
        server clinicalx_main:8080;  # Use the service name and port defined in docker-compose.yml
    }

    upstream clinicalx_api {
        server clinicalx_api:3000;  # Use the service name and port defined in docker-compose.yml
    }

    upstream labpal_chat_api {
        server labpal_chat_api:3500;  # Use the service name and port defined in docker-compose.yml
    }

    server {
        listen 443 ssl;
        server_name labpal.com.ng;

        # Path to SSL certificates
        ssl_certificate /etc/letsencrypt/live/labpal.com.ng/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/labpal.com.ng/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

        location / {
            proxy_pass http://clinicalx_main;  # Use http if the upstream does not have SSL
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api {
            proxy_pass http://clinicalx_api;  # Use http if the upstream does not have SSL
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /api/chat {
            proxy_pass http://labpal_chat_api;  # Use http if the upstream does not have SSL
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 80;
        server_name labpal.com.ng;

        # Redirect HTTP to HTTPS
        return 301 https://$host$request_uri;
    }
}
