http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    access_log /var/log/nginx/labpal_main.access.log;
    error_log /var/log/nginx/labpal_main.error.log;
    resolver 127.0.0.11 valid=30s;  # Docker's internal DNS resolver

    # Load balancing for labpal_main
    upstream labpal_main {
        least_conn;  # Load balance based on least connections
        server labpal_main:8080;  # Docker's internal service name
    }

    # Load balancing for labpal_api
    upstream labpal_api {
        least_conn;  # Load balance based on least connections
        server labpal_api:3000;  # Docker's internal service name
    }

    server {
        listen 443 ssl;
        server_name labpal.com.ng;

        ssl_certificate /etc/letsencrypt/live/labpal.com.ng/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/labpal.com.ng/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

        # Load balancing to labpal_main
        location / {
            proxy_pass http://labpal_main;  # Load balance between replicas of labpal_main
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Load balancing to labpal_api
        location /api {
            proxy_pass http://labpal_api;  # Load balance between replicas of labpal_api
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        listen 80;
        server_name labpal.com.ng;

        # Redirect HTTP to HTTPS
        return 301 https://$host$request_uri;
    }
}
